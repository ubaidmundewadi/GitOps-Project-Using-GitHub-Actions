name: "Vprofile IAC"
on:
  push:
    branches:
      - main
      - stage
    paths:
      - terraform/**
  pull_request:
    branches:
      - main
    paths:
      - terraform/**

env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    BUCKET_TF_NAME: ${{ secrets.BUCKET_TF_STATE }}
    AWS_REGION: us-east-1
    EKS_CLUSTER_NAME: vprofile-eks

jobs:
    terraform:
        name: "Apply Terraform code changes"
        runs-on: ubuntu-latest
        defaults:
            run:
                shell: bash
                working-directory: ./terraform
        steps:
        -   name: Checkout
            uses: actions/checkout@v4
    
        -   name: Setup Terraform
            uses: hashicorp/setup-terraform@v2
            with:
                terraform_version: 1.6.3
    
        -   name: Terraform Init
            id: init    
            run: terraform init -backend-config="bucket=${BUCKET_TF_NAME}" 

        -   name: Terraform format
            id: fmt
            run: terraform fmt -check

        -   name: Terraform Validate
            id: validate
            run: terraform validate

        -   name: Terraform Plan
            id: plan
            run: terraform plan -no-color -input=false -out planfile
            continue-on-error: true
        
        -   name: Terraform plan status
            if: ${{ steps.plan.outcome == 'failure' }}
            run: exit 1

        -   name: Terraform Apply
            id: apply
            if: github.ref == 'refs/heads/main' && github.event_name == 'push'
            run: terraform apply -auto-approve -input=false -parallelism=1 planfile

        -   name: Configure AWS Credentials
            uses: aws-actions/configure-aws-credentials@v1
            with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ env.AWS_REGION }}
        
        -   name: Get kubeconfig
            id: get_kubeconfig
            if: steps.apply.outcome == 'success'
            run: aws eks --region ${{ env.AWS_REGION }} update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} 

        -   name: Install ingress controller
            if: steps.apply.outcome == 'success' && steps.get_kubeconfig.outcome == 'success'
            run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/aws/deploy.yaml